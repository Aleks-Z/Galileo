#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "post-checkout".
#
# This hook is invoked when a git-checkout is run after having updated
# the worktree. The hook is given three parameters: 
# $1 - the ref of the previous HEAD,
# $2 - the ref of the new HEAD (which may or may not have changed),
# $3 - flag indicating whether the checkout was a branch checkout 
#      (changing branches, flag=1) or a file checkout (retrieving
#      a file from the index, flag=0). This hook cannot affect the outcome
#      of git-checkout.


echo "Running the post-checkout hook..."


currentBranch=$(basename $(git symbolic-ref HEAD))
commitsBehindDevelop=$(git rev-list --count $currentBranch..develop)


if [ $commitsBehindDevelop -gt 0 ]
then
    printf "ATTENTION: Your branch $currentBranch is $commitsBehindDevelop commits behind develop\n"
    exit 1
fi


exit 0


