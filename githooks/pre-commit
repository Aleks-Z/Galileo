#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".



echo "Running the pre-commit hook..."


GIT_DIR_="$(git rev-parse --git-dir)"

currentBranch=$(basename $(git symbolic-ref HEAD))
currentVersion=$(git diff --name-only --cached)

updateVersionProgram=githooks/updateVersion.sh


# To clean any old missed file
if [ -f $GIT_DIR_/isToUpdateTheGalileoFile.txt ]
then
    rm $GIT_DIR_/isToUpdateTheGalileoFile.txt
fi


# Only updates whether the current branch the develop and the file being changed is "galileo.sma".
if [[ $currentVersion == *"galileo.sma"* ]] && [[ $currentBranch == "develop" ]]
then
    if sh $GIT_DIR_/../$updateVersionProgram build
    then
        echo "isToUpdateTheGalileoFile" > $GIT_DIR_/isToUpdateTheGalileoFile.txt
        echo "Successfully ran $updateVersionProgram"
    else
        echo "Could not run the update program $updateVersionProgram properly!"
        exit 1
    fi
else
    echo "The 'galileo.sma' file is not being committed/updated right now."
fi


echo "Successfully executed the pre-commit hook."
exit 0


